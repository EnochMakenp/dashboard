{"version":3,"file":"static/webpack/static/development/pages/index.js.849e5715c0c564d8bc01.hot-update.js","sources":["webpack:///./components/statistics.js"],"sourcesContent":["import React, {useContext, useState} from 'react'\nimport {X, BarChart2} from 'react-feather'\n\nimport colors from '../styles/colors'\n\nimport {AppContext, ThemeContext} from '../pages'\n\nimport Counters from './counters'\nimport MixedChart from './charts/mixed-chart'\nimport ConfirmesChart from './charts/confirmes-chart'\nimport DecesChart from './charts/deces-chart'\nimport ReanimationChart from './charts/reanimation-chart'\nimport HospitalisesChart from './charts/hospitalises-chart'\nimport GuerisChart from './charts/gueris-chart'\n\nconst charts = {\n  mixed: {\n    name: 'Tout afficher',\n    chart: MixedChart\n  },\n  confirmed: {\n    name: 'Cas confirmés',\n    chart: ConfirmesChart\n  },\n  hospitalises: {\n    name: 'Hospitalisations',\n    chart: HospitalisesChart\n  },\n  reanimation: {\n    name: 'Réanimations',\n    chart: ReanimationChart\n  },\n  deces: {\n    name: 'Décès',\n    chart: DecesChart\n  },\n  gueris: {\n    name: 'Retours à domicile',\n    chart: GuerisChart\n  }\n}\n\nconst Statistics = () => {\n  const theme = useContext(ThemeContext)\n  const {date, franceReport, previousFranceReport, selectedPreviousLocationReport, selectedLocationReport, setSelectedLocation, isMobileDevice} = useContext(AppContext)\n\n  const report = selectedLocationReport || franceReport\n  const previousReport = selectedPreviousLocationReport || previousFranceReport\n\n  const [selectedChart, setSelectedChart] = useState('mixed')\n  const Chart = charts[selectedChart].chart\n\n  return (\n    <>\n      <div className='header'>\n        {selectedLocationReport && (\n          isMobileDevice ? (\n            <div className='close' onClick={() => setSelectedLocation(null)}><X /></div>\n          ) : (\n            <div className='back' onClick={() => setSelectedLocation(null)}><BarChart2 /> <span>France</span></div>\n          )\n        )}\n        <h2>COVID-19 en {selectedLocationReport ? selectedLocationReport.nom : 'France'}</h2>\n      </div>\n\n      <Counters report={report} previousReport={previousReport} />\n\n      {report && report.history && (\n        <>\n          <Chart data={report.history.filter(r => date >= r.date)} height={isMobileDevice ? 150 : 150} />\n          <div className='charts-list'>\n            {Object.keys(charts).map(chart => (\n              <div\n                key={chart}\n                className={`chart-name ${chart === selectedChart ? 'selected' : ''}`}\n                onClick={() => setSelectedChart(chart)}\n              >\n                {charts[chart].name}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n\n      <style jsx>{`\n        .header {\n          text-align: center;\n          position: sticky;\n          top: 0;\n          background-color: white;\n          margin: ${isMobileDevice ? '0 -0.5em' : 0};\n          padding: 1px;\n        }\n\n        .back {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: ${colors.lighterGrey};\n          padding: 0.5em;\n          font-size: larger;\n        }\n\n        .close {\n          position: absolute;\n          top: 0;\n          right: 0.5em;\n        }\n\n        .back span {\n          margin: 0 0.5em;\n        }\n\n        .back:hover {\n          cursor: pointer;\n          background: ${colors.lightGrey};\n        }\n\n        .charts-list {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n          grid-gap: 0.2em;\n          margin: 0.5em;\n        }\n\n        .chart-name {\n          text-align: center;\n          background-color: ${theme.alt};\n          color: #fff;\n          border-radius: 4px;\n          margin: .2em 0;\n          padding: 0.2em 0.4em;\n        }\n\n        .chart-name:hover {\n          cursor: pointer;\n          background-color: ${theme.secondary};\n        }\n\n        .chart-name.selected {\n          background-color: ${theme.primary};\n        }\n        `}</style>\n    </>\n  )\n}\n\nexport default Statistics\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AArlBA;AAAA;AAAA;AAAA;AA6FA;AACA;AACA;;;;A","sourceRoot":""}